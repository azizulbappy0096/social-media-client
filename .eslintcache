[{"/home/azizul/Documents/Web Dev/social-media/client/src/index.js":"1","/home/azizul/Documents/Web Dev/social-media/client/src/reportWebVitals.js":"2","/home/azizul/Documents/Web Dev/social-media/client/src/App.js":"3","/home/azizul/Documents/Web Dev/social-media/client/src/utils/ApolloProvider.js":"4","/home/azizul/Documents/Web Dev/social-media/client/src/pages/Home.js":"5","/home/azizul/Documents/Web Dev/social-media/client/src/pages/Login.js":"6","/home/azizul/Documents/Web Dev/social-media/client/src/pages/Register.js":"7","/home/azizul/Documents/Web Dev/social-media/client/src/components/MenuBar/MenuBar.js":"8","/home/azizul/Documents/Web Dev/social-media/client/src/utils/graphql/postQuery.js":"9","/home/azizul/Documents/Web Dev/social-media/client/src/components/PostCard/PostCard.js":"10","/home/azizul/Documents/Web Dev/social-media/client/src/utils/FormHooks.js":"11","/home/azizul/Documents/Web Dev/social-media/client/src/utils/graphql/userMutation.js":"12","/home/azizul/Documents/Web Dev/social-media/client/src/utils/validator/userValidator.js":"13","/home/azizul/Documents/Web Dev/social-media/client/src/utils/ReduxProvider.js":"14","/home/azizul/Documents/Web Dev/social-media/client/src/utils/reducer/rootReducer.js":"15","/home/azizul/Documents/Web Dev/social-media/client/src/utils/reducer/authReducer.js":"16","/home/azizul/Documents/Web Dev/social-media/client/src/pages/404.js":"17","/home/azizul/Documents/Web Dev/social-media/client/src/components/CreatePost/CreatePost.js":"18","/home/azizul/Documents/Web Dev/social-media/client/src/components/DeleteButton/DeleteButton.js":"19","/home/azizul/Documents/Web Dev/social-media/client/src/components/LikeButton/LikeButton.js":"20","/home/azizul/Documents/Web Dev/social-media/client/src/pages/SinglePost.js":"21","/home/azizul/Documents/Web Dev/social-media/client/src/components/CommentButton/CommentButton.js":"22","/home/azizul/Documents/Web Dev/social-media/client/src/components/ContactBar/ContactBar.js":"23","/home/azizul/Documents/Web Dev/social-media/client/src/components/PeopleSideBar/PeopleSideBar.js":"24","/home/azizul/Documents/Web Dev/social-media/client/src/components/Chat/Chat.js":"25","/home/azizul/Documents/Web Dev/social-media/client/src/components/TextBox/TextBox.js":"26"},{"size":696,"mtime":1611496887167,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1611401090969,"results":"29","hashOfConfig":"28"},{"size":2261,"mtime":1612193634696,"results":"30","hashOfConfig":"28"},{"size":723,"mtime":1611586696350,"results":"31","hashOfConfig":"28"},{"size":2734,"mtime":1611759335522,"results":"32","hashOfConfig":"28"},{"size":2593,"mtime":1611503586067,"results":"33","hashOfConfig":"28"},{"size":3228,"mtime":1611503593975,"results":"34","hashOfConfig":"28"},{"size":2013,"mtime":1611730496844,"results":"35","hashOfConfig":"28"},{"size":1797,"mtime":1611668225296,"results":"36","hashOfConfig":"28"},{"size":2161,"mtime":1612193194426,"results":"37","hashOfConfig":"28"},{"size":413,"mtime":1611428387630,"results":"38","hashOfConfig":"28"},{"size":612,"mtime":1611487933075,"results":"39","hashOfConfig":"28"},{"size":1222,"mtime":1611430363312,"results":"40","hashOfConfig":"28"},{"size":479,"mtime":1611497520302,"results":"41","hashOfConfig":"28"},{"size":169,"mtime":1611496811245,"results":"42","hashOfConfig":"28"},{"size":861,"mtime":1611501903263,"results":"43","hashOfConfig":"28"},{"size":794,"mtime":1611508994007,"results":"44","hashOfConfig":"28"},{"size":1646,"mtime":1612189822256,"results":"45","hashOfConfig":"28"},{"size":1656,"mtime":1612193033533,"results":"46","hashOfConfig":"28"},{"size":1635,"mtime":1612193038229,"results":"47","hashOfConfig":"28"},{"size":7183,"mtime":1611684127790,"results":"48","hashOfConfig":"28"},{"size":515,"mtime":1612193671026,"results":"49","hashOfConfig":"28"},{"size":3199,"mtime":1612189744141,"results":"50","hashOfConfig":"28"},{"size":1874,"mtime":1612193049309,"results":"51","hashOfConfig":"28"},{"size":1326,"mtime":1612189806917,"results":"52","hashOfConfig":"28"},{"size":610,"mtime":1611771995679,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"dxqnen",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},"/home/azizul/Documents/Web Dev/social-media/client/src/index.js",[],["111","112"],"/home/azizul/Documents/Web Dev/social-media/client/src/reportWebVitals.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/App.js",["113","114"],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/ApolloProvider.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/pages/Home.js",["115"],"import \"./css/Home.css\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { Grid, Transition } from \"semantic-ui-react\";\nimport CreatePost from \"../components/CreatePost/CreatePost\";\nimport PostCard from \"../components/PostCard/PostCard\";\n\n// query\nimport { allPost } from \"../utils/graphql/postQuery\";\n\n//\nimport { useSelector } from \"react-redux\";\nimport ContactBar from \"../components/ContactBar/ContactBar\";\nimport PeopleSideBar from \"../components/PeopleSideBar/PeopleSideBar\";\nimport Chat from \"../components/Chat/Chat\";\n\nfunction Home() {\n  const { user } = useSelector((reducer) => reducer.authReducer);\n  const { loading, error, data } = useQuery(allPost);\n  const [columns, setColumns] = useState(\"two\");\n\n  useEffect(() => {\n    if (window.innerWidth <= 668) {\n      setColumns(\"one\");\n    } else {\n      setColumns(\"two\");\n    }\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth < 768) {\n        setColumns(\"one\");\n      } else {\n        setColumns(\"two\");\n      }\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        if (window.innerWidth < 768) {\n          setColumns(\"one\");\n        } else {\n          setColumns(\"two\");\n        }\n      });\n    };\n  }, []);\n\n  const displayPosts = () => {\n    if (loading) {\n      return <h1> Loading... </h1>;\n    } else if (error) {\n      // need to change later\n      return <h1> {error.message} </h1>;\n    } else if (data) {\n      return (\n        // <Grid.Row centered>\n          \n\n        data.getPosts && (\n          <Transition.Group animation=\"scale\">\n            {data.getPosts.map((post) => {\n              return (\n                <Grid.Column width=\"16\" key={post.id}>\n                  <PostCard post={post} />\n                </Grid.Column>\n              );\n            })}\n          </Transition.Group>\n        )\n        // </Grid.Row>\n      );\n    }\n  };\n\n  return (\n    <div className=\"home\">\n      <Grid centered>\n        <Grid.Row columns=\"3\">\n          <Grid.Column width=\"4\">\n          <PeopleSideBar />\n          </Grid.Column>\n\n          <Grid.Column width=\"7\" style={{ marginTop: \"12px\"}}>\n           \n           <Grid.Row style={{justifyContent: \"center\", marginBottom: \"12px\"}}>\n           <h1> Recent Posts</h1>\n           </Grid.Row>\n          \n            {user ? (\n            <Grid.Column >\n              <CreatePost />\n            </Grid.Column>\n          ) : (\n            \"\"\n          )}\n            {displayPosts()}\n          </Grid.Column>\n\n          <Grid.Column width=\"4\" className=\"home__rigthBar\">\n            <ContactBar />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Chat />\n    </div>\n  );\n}\n\nexport default Home;\n","/home/azizul/Documents/Web Dev/social-media/client/src/pages/Login.js",["116"],"import React, { useState } from \"react\";\nimport { Button, CommentAction, Form, Grid } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\n// css\nimport \"./css/Register.css\";\n\n// form hook\nimport { useForm } from \"../utils/FormHooks\";\n\n// mutation\nimport { loginUser } from \"../utils/graphql/userMutation\";\n// validator\nimport { loginValidator } from \"../utils/validator/userValidator\";\n\n// redux-store\nimport { actionTypes } from \"../utils/reducer/authReducer\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState({});\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n  const { values, onChange, onSubmit } = useForm(initialValues, Login);\n\n  const [login, { loading }] = useMutation(loginUser, {\n    update: (_, { data: { login } }) => {\n      dispatch({\n          type: actionTypes.login,\n          user: login\n      })\n    },\n    onError: (err) => {\n      setErrors({ ...errors, server: err.message.split(\": \")[1] });\n    },\n    variables: values,\n    onCompleted: (data) => {\n      history.replace(\"/\");\n    },\n  });\n\n  function Login() {\n    const { valid, errors } = loginValidator(values.username, values.password);\n    if (valid) {\n      setErrors({});\n      login();\n    } else {\n      setErrors(errors);\n    }\n  }\n\n  return (\n    <Form\n      error\n      onSubmit={onSubmit}\n      className={`login__form ${loading ? \"loading\" : \"\"}`}\n    >\n      <Grid>\n        <Grid.Row centered style={{ margin: \"12px auto\" }}>\n          <h1> Login Account </h1>\n        </Grid.Row>\n      </Grid>\n      <Form.Input\n        type=\"text\"\n        name=\"username\"\n        value={values.username}\n        error={errors.username ? true : false}\n        placeholder=\"Type username...\"\n        onChange={onChange}\n      />\n      <Form.Input\n        type=\"password\"\n        name=\"password\"\n        value={values.password}\n        error={errors.password ? true : false}\n        placeholder=\"Type Password...\"\n        onChange={onChange}\n      />\n      <Button type=\"submit\"> Login </Button>\n\n      {Object.keys(errors).length > 0 && (\n        <div className=\"ui error message\">\n          <ul className=\"list\">\n            {Object.values(errors).map((value, index) => (\n              <li key={index}>\n                {\" \"}\n                {value ? value : \"Unexpected server Error!!\"}{\" \"}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </Form>\n  );\n}\n\nexport default Login;\n","/home/azizul/Documents/Web Dev/social-media/client/src/pages/Register.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/components/MenuBar/MenuBar.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/graphql/postQuery.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/components/PostCard/PostCard.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/FormHooks.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/graphql/userMutation.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/validator/userValidator.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/ReduxProvider.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/reducer/rootReducer.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/utils/reducer/authReducer.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/pages/404.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/components/CreatePost/CreatePost.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/components/DeleteButton/DeleteButton.js",["117"],"/home/azizul/Documents/Web Dev/social-media/client/src/components/LikeButton/LikeButton.js",["118"],"/home/azizul/Documents/Web Dev/social-media/client/src/pages/SinglePost.js",["119"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Form,\n  Grid,\n  Button,\n  Image,\n  Card,\n  Transition,\n  Comment,\n  Header,\n} from \"semantic-ui-react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { getPostById, createComment } from \"../utils/graphql/postQuery\";\nimport { useSelector } from \"react-redux\";\nimport LikeButton from \"../components/LikeButton/LikeButton\";\nimport CommentButton from \"../components/CommentButton/CommentButton\";\nimport DeleteButton from \"../components/DeleteButton/DeleteButton\";\n\nfunction SinglePost() {\n  const history = useHistory();\n  const { user } = useSelector((reducer) => reducer.authReducer);\n  const { id } = useParams();\n  const commentInputRef = useRef(null);\n  const [body, setBody] = useState(\"\");\n  const [columns, setColumns] = useState(\"ten\");\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    if (window.innerWidth < 768) {\n      setColumns(\"sixteen\");\n      setIsMobile(true);\n    } else {\n      setColumns(\"ten\");\n      setIsMobile(false);\n    }\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth < 768) {\n        setColumns(\"sixteen\");\n        setIsMobile(true);\n      } else {\n        setColumns(\"ten\");\n        setIsMobile(false);\n      }\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        if (window.innerWidth < 768) {\n          setColumns(\"sixteen\");\n          setIsMobile(true);\n        } else {\n          setColumns(\"ten\");\n          setIsMobile(false);\n        }\n      });\n    };\n  }, []);\n  const { loading, error, data } = useQuery(getPostById, {\n    variables: {\n      postId: id,\n    },\n    onError: (err) => {},\n  });\n\n  const [addComment, {}] = useMutation(createComment, {\n    variables: {\n      postId: data && data.getPost.id,\n      body,\n    },\n    update: () => {\n      setBody(\"\");\n      commentInputRef.current.blur();\n    },\n    onError: (err) => {},\n  });\n\n  function handleRedirect() {\n    history.replace(\"/\");\n  }\n\n  function submitComment() {\n    if (body.trim() !== \"\") {\n      addComment();\n    }\n  }\n\n  if (loading) {\n    return <h1> Loading</h1>;\n  } else if (error) {\n    return <h1> {error.message} </h1>;\n  }\n\n  return (\n    <Grid style={{ marginTop: 12 }} centered>\n      <Grid.Row style={{ justifyContent: \"flex-start\" }}>\n        <Button\n          labelPosition=\"left\"\n          icon=\"left chevron\"\n          content=\"Back\"\n          onClick={handleRedirect}\n        />\n      </Grid.Row>\n      <Grid.Row>\n        {!isMobile && (\n          <Grid.Column width={2}>\n            <Image src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\" />\n          </Grid.Column>\n        )}\n        <Grid.Column width={columns}>\n          <Card fluid>\n            <Card.Content>\n              {isMobile && (\n                <Image\n                  floated=\"right\"\n                  size=\"mini\"\n                  src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\n                />\n              )}\n              <Card.Header> {data.getPost.username} </Card.Header>\n              <Card.Meta>\n                {\" \"}\n                {moment(data.getPost.createdAt).fromNow()}{\" \"}\n              </Card.Meta>\n              <Card.Description>{data.getPost.body}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <LikeButton\n                user={user}\n                likes={data.getPost.likes}\n                likeCount={data.getPost.likeCount}\n                postId={data.getPost.id}\n              />\n              <CommentButton\n                commentCount={data.getPost.commentCount}\n                postId={data.getPost.id}\n              />\n\n              {user\n                ? user.username === data.getPost.username && (\n                    <DeleteButton\n                      callBack={handleRedirect}\n                      postId={data.getPost.id}\n                    />\n                  )\n                : \"\"}\n            </Card.Content>\n          </Card>\n          {user && (\n            <Card fluid>\n              <Card.Content>\n                <p> Post a comment: </p>\n                <Form onSubmit={submitComment}>\n                  <div className=\"ui action input fluid\">\n                    <textarea\n                      type=\"text\"\n                      placeholder=\"Type here...\"\n                      value={body}\n                      onChange={(e) => setBody(e.target.value)}\n                      ref={commentInputRef}\n                      rows=\"3\"\n                      style={{ marginBottom: \"6px\" }}\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"ui button teal\">\n                    {\" \"}\n                    Submit{\" \"}\n                  </button>\n                </Form>\n              </Card.Content>\n            </Card>\n          )}\n\n          <Comment.Group minimal size=\"large\">\n            <Header as=\"h3\" dividing>\n              Comments\n            </Header>\n            <Transition.Group animation=\"scale\">\n              {data.getPost.comments.map((comment, index) => (\n                <Comment key={comment.id}>\n                  <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n                  <Comment.Content>\n                    <Comment.Author as=\"a\">{comment.username}</Comment.Author>\n                    <Comment.Metadata>\n                      <div>{moment(comment.createdAt).fromNow()}</div>\n                    </Comment.Metadata>\n                    <Comment.Text> {comment.body} </Comment.Text>\n                    <Comment.Actions>\n                    {user &&\n                  (user.username === comment.username ? (\n                    <DeleteButton\n                      callBack={handleRedirect}\n                      postId={data.getPost.id}\n                      commentId={comment.id}\n                      size=\"mini\"\n                    />\n                  ) : (\n                    \"\"\n                  ))}\n        </Comment.Actions>\n                  </Comment.Content>\n                  {index < data.getPost.comments.length - 1 && <hr />}\n                </Comment>\n              ))}\n            </Transition.Group>\n          </Comment.Group>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default SinglePost;\n\n// {\n//    <Card fluid key={comment.id}>\n//               <Card.Content>\n//                 {user &&\n//                   (user.username === comment.username ? (\n//                     <DeleteButton\n//                       callBack={handleRedirect}\n//                       postId={data.getPost.id}\n//                       commentId={comment.id}\n//                     />\n//                   ) : (\n//                     \"\"\n//                   ))}\n//                 <Card.Header> {comment.username} </Card.Header>\n//                 <Card.Meta> {moment(comment.createdAt).fromNow()} </Card.Meta>\n//                 <Card.Description> {comment.body} </Card.Description>\n//               </Card.Content>\n//             </Card> \n// }\n","/home/azizul/Documents/Web Dev/social-media/client/src/components/CommentButton/CommentButton.js",["120","121"],"/home/azizul/Documents/Web Dev/social-media/client/src/components/ContactBar/ContactBar.js",[],"/home/azizul/Documents/Web Dev/social-media/client/src/components/PeopleSideBar/PeopleSideBar.js",["122"],"/home/azizul/Documents/Web Dev/social-media/client/src/components/Chat/Chat.js",["123"],"/home/azizul/Documents/Web Dev/social-media/client/src/components/TextBox/TextBox.js",["124"],"import React from \"react\";\nimport { Form, TextArea, Icon } from \"semantic-ui-react\";\n\nfunction TextBox() {\n  return (\n    <Form className=\"textBox\">\n      <Icon\n       name=\"picture\"\n       className=\"textBox__icon\"\n       \n      />\n      <Icon\n       name=\"mix\"\n       \n       className=\"textBox__icon\"\n      />\n      <div className=\"textBox__inputBox\">\n      <textarea className=\"textBox__input\" rows=\"1\" cols=\"1\" placeholder=\"Tell us more\" />\n      <Icon name=\"eye\"  className=\"textBox__icon\" />\n      </div>\n      <Icon name=\"like\"  className=\"textBox__icon\" />\n    </Form>\n  );\n}\n\nexport default TextBox;\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":56,"column":6,"nodeType":"135","endLine":56,"endColumn":8,"suggestions":"136"},{"ruleId":"129","severity":1,"message":"137","line":21,"column":10,"nodeType":"131","messageId":"132","endLine":21,"endColumn":17},{"ruleId":"129","severity":1,"message":"138","line":2,"column":18,"nodeType":"131","messageId":"132","endLine":2,"endColumn":31},{"ruleId":"129","severity":1,"message":"139","line":9,"column":24,"nodeType":"131","messageId":"132","endLine":9,"endColumn":29},{"ruleId":"129","severity":1,"message":"139","line":27,"column":22,"nodeType":"131","messageId":"132","endLine":27,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":68,"column":22,"nodeType":"142","messageId":"143","endLine":68,"endColumn":24},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"145","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"146","line":3,"column":32,"nodeType":"131","messageId":"132","endLine":3,"endColumn":36},{"ruleId":"129","severity":1,"message":"147","line":4,"column":23,"nodeType":"131","messageId":"132","endLine":4,"endColumn":27},{"ruleId":"129","severity":1,"message":"148","line":2,"column":16,"nodeType":"131","messageId":"132","endLine":2,"endColumn":24},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'columns' is assigned a value but never used.","'CommentAction' is defined but never used.","'error' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'Icon' is defined but never used.","'Card' is defined but never used.","'TextArea' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [dispatch]",{"range":"154","text":"155"},[1602,1604],"[dispatch]"]